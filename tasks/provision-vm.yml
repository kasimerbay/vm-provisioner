- name: Set per-VM working directory
  ansible.builtin.set_fact:
    terraform_working_dir: "{{ lookup('env', 'HOME') }}/.ansible_tf_tmp/{{ vm.hostname }}"

- name: Create Terraform working directory
  ansible.builtin.file:
    path: "{{ terraform_working_dir }}"
    state: directory
    mode: '0755'

- name: Create Vagrant provisioning directory inside working dir
  ansible.builtin.file:
    path: "{{ terraform_working_dir }}/{{ vm_provisioner_vagrant_files_base_dir }}"
    state: directory
    mode: '0755'

- name: Copy common Vagrant provisioning scripts
  ansible.builtin.copy:
    src: "alma9-generic/{{ item.path | basename }}"
    dest: "{{ terraform_working_dir }}/{{ vm_provisioner_vagrant_files_base_dir }}/{{ item.path | basename }}"
    mode: '0755'
  loop: "{{ vm_provisioner_provision_scripts }}"

- name: Generate Vagrantfile from template
  ansible.builtin.template:
    src: Vagrantfile.j2
    dest: "{{ terraform_working_dir }}/{{ vm_provisioner_vagrant_files_base_dir }}/Vagrantfile"
    mode: '0644'

- name: Generate main.tf from template
  ansible.builtin.template:
    src: main.tf.j2
    dest: "{{ terraform_working_dir }}/main.tf"
    mode: '0644'

# - name: Debug Terraform variables
#   ansible.builtin.debug:
#     msg: "Terraform variables: {{ terraform_vars | to_nice_json }}"

- name: Terraform init and plan
  community.general.terraform:
    project_path: "{{ terraform_working_dir }}"
    state: planned
    force_init: true
    plan_file: tfplan
    complex_vars: true
  register: tf_init

# - name: Debug Terraform init result
#   ansible.builtin.debug:
#     var: tf_init

- name: Terraform apply
  community.general.terraform:
    project_path: "{{ terraform_working_dir }}"
    state: present
    plan_file: tfplan
    complex_vars: true
  register: tf_apply

# - name: Debug Terraform apply result
#   ansible.builtin.debug:
#     var: tf_apply

- name: Debug Terraform outputs
  ansible.builtin.debug:
    msg: "Terraform outputs for {{ vm.hostname }}: {{ tf_apply.outputs | default({}) | to_nice_json }}"
